// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Property {
  id            String   @id @default(uuid())
  name          String
  address       String
  property_type String
  description   String?
  date_added    DateTime @default(now())
  units         Unit[]

  @@map("properties")
}

model Unit {
  id          String   @id @default(uuid())
  property    Property @relation(fields: [propertyId], references: [id])
  propertyId  String
  identifier  String
  floor       Int?
  area        Float?
  isOccupied  Boolean  @default(false)
  leases      Lease[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("units")
}

model Tenant {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  phone      String?
  leases     Lease[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("tenants")
}

model Lease {
  id         String   @id @default(uuid())
  name       String
  unitId     String
  tenantId   String
  startDate  DateTime
  endDate    DateTime?
  rentAmount Float

  monthlyWater       Float   @default(0)
  monthlyGas         Float   @default(0)
  monthlyElectricity Float   @default(0)
  monthlyServices    Float   @default(0)
  repairFund         Float   @default(0)
  customFields       Json    @default("[]")
  totalBillableRent  Float   @default(0)

  unit     Unit   @relation(fields: [unitId], references: [id])
  tenant   Tenant @relation(fields: [tenantId], references: [id])
  payments Payment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("leases")
}

model Payment {
  id         String   @id @default(uuid())
  lease      Lease    @relation(fields: [leaseId], references: [id])
  leaseId    String
  amount     Float
  paidAt     DateTime @default(now())
  note       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("payments")
}
